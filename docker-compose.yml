# La línea 'version' es obsoleta en Docker Compose v2+ y se puede omitir.
# version: '3.8' 

services:
  # Definición del servicio del microservicio de Solicitudes
  solicitud_service:
    build: ./SolicitudService 
    container_name: solicitud_service_app 
    ports:
      - "5001:5001" 
    networks:
      - exam_network 
    restart: unless-stopped 
    environment: 
      - FLASK_ENV=development

  # Definición del servicio de base de datos PostgreSQL para Kong
  kong_db:
    image: postgres:13 
    container_name: kong_postgres_db
    environment:
      POSTGRES_USER: kong 
      POSTGRES_DB: kong   
      POSTGRES_PASSWORD: kongpassword 
    volumes:
      - kong_db_data:/var/lib/postgresql/data 
    networks:
      - exam_network
    healthcheck: 
      test: ["CMD", "pg_isready", "-U", "kong"] 
      interval: 5s 
      timeout: 5s  
      retries: 5   
    restart: unless-stopped

  # Servicio para ejecutar las migraciones de la base de datos de Kong
  kong_migrations:
    image: kong:latest
    container_name: kong_migrations_bootstrap
    depends_on: 
      kong_db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres 
      KONG_PG_HOST: kong_db   
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpassword
    command: "kong migrations bootstrap" 
    networks:
      - exam_network
    restart: on-failure 

  # Definición del servicio del API Gateway Kong
  kong:
    image: kong:latest 
    container_name: kong_api_gateway
    depends_on: 
      kong_migrations:
        condition: service_completed_successfully
      solicitud_service: 
        condition: service_started 
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong_db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpassword
      KONG_ADMIN_ACCESS_LOG: /dev/stdout # Corregido: sin '}' al final
      KONG_ADMIN_ERROR_LOG: /dev/stderr  # Corregido: sin '}' al final
      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl' 
      KONG_PROXY_ACCESS_LOG: /dev/stdout 
      KONG_PROXY_ERROR_LOG: /dev/stderr  
      KONG_PROXY_LISTEN: '0.0.0.0:8000, 0.0.0.0:8443 ssl' 
      KONG_PLUGINS: bundled,jwt,key-auth,rate-limiting 
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yaml 
      KONG_NGINX_WORKER_PROCESSES: '1' 
      KONG_LOG_LEVEL: debug 
    volumes:
      - ./Kong/kong.yaml:/etc/kong/kong.yaml:ro 
    ports:
      - "8000:8000"  
      - "8443:8443"  
      - "8001:8001"  
      - "8444:8444"  
    networks:
      - exam_network
    healthcheck: 
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  exam_network: 
    driver: bridge 

volumes:
  kong_db_data:
